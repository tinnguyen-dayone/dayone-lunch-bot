name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/dayone-lunch-bot:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          SSH_HOST: ${{ secrets.EC2_HOST }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          DB_URL: ${{ secrets.DB_URL }}
          LUNCH_PRICE: ${{ secrets.LUNCH_PRICE }}
        run: |
          # Create deployment script
          cat > deploy.sh << 'EOL'
          #!/bin/bash
          set -e
            
          # Install Git if not available
          if ! command -v git &> /dev/null; then
            sudo apt-get update
            sudo apt-get install -y git
          fi

          # Setup repository
          if [ ! -d ~/discord-bot/.git ]; then
            rm -rf ~/discord-bot
            git clone https://github.com/tinnguyen-dayone/dayone-lunch-bot.git ~/discord-bot
          else
            cd ~/discord-bot
            git pull
          fi

          # Install Docker if not available
          if ! command -v docker &> /dev/null; then
            curl -fsSL https://get.docker.com -o get-docker.sh
            sh get-docker.sh
            sudo usermod -aG docker ubuntu
            newgrp docker
          fi

          # Create Docker network if it doesn't exist
          docker network create lunch-network || true

          # Stop and remove existing containers
          docker rm -f dayone-lunch-bot || true

          # Run PostgreSQL if not already running
          if ! docker ps | grep -q dayone-lunch-postgres; then
            docker run -d \
              --name dayone-lunch-postgres \
              --network lunch-network \
              -e POSTGRESQL_PASSWORD=UbsYkfANm36ezN1PQkcp \
              -e POSTGRESQL_DATABASE=lunch \
              -e POSTGRESQL_USERNAME=postgres \
              -e POSTGRESQL_ENABLE_TLS=false \
              -e POSTGRESQL_SKIP_SSLMODE=true \
              -p 5432:5432 \
              bitnami/postgresql:latest
          else
            # Connect existing postgres to network if needed
            docker network connect lunch-network dayone-lunch-postgres || true
          fi
          EOL

          # Append environment-specific part
          cat >> deploy.sh << EOF

          # Create .env file
          cat > .env << ENVEOF
          DISCORD_TOKEN=${DISCORD_TOKEN}
          DB_URL=${DB_URL}
          LUNCH_PRICE=${LUNCH_PRICE}
          ENVEOF

          # Deploy bot container
          docker run -d \
            --name dayone-lunch-bot \
            --network lunch-network \
            -v \$(pwd)/.env:/app/.env \
            --restart on-failure \
            ghcr.io/tinnguyen-dayone/dayone-lunch-bot:latest

          # Verify container is running
          docker ps | grep dayone-lunch-bot || exit 1
          EOF

          chmod +x deploy.sh
          scp deploy.sh ubuntu@$SSH_HOST:~/deploy.sh
          ssh ubuntu@$SSH_HOST "bash ~/deploy.sh && rm ~/deploy.sh"

      - name: Verify Deployment
        env:
          SSH_HOST: ${{ secrets.EC2_HOST }}
        run: |
          sleep 10
          ssh ubuntu@$SSH_HOST 'docker ps | grep -q dayone-lunch-bot'
